// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarhammerXpCalculator.Models;

#nullable disable

namespace WarhammerXpCalculator.Migrations
{
    [DbContext(typeof(WarhammerXpCalcDB))]
    [Migration("20240321225707_fifth")]
    partial class fifth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WarhammerXpCalculator.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Career")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerTier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExperienceGainIndividually")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceSpent")
                        .HasColumnType("int");

                    b.Property<string>("Eyes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FatePoints")
                        .HasColumnType("int");

                    b.Property<int>("FortunePoints")
                        .HasColumnType("int");

                    b.Property<string>("Hair")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongTermAmbition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motivation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovementMove")
                        .HasColumnType("int");

                    b.Property<int>("MovementRun")
                        .HasColumnType("int");

                    b.Property<int>("MovementWalk")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartyId")
                        .HasColumnType("int");

                    b.Property<string>("Player")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResiliencePoints")
                        .HasColumnType("int");

                    b.Property<int>("ResolvePoints")
                        .HasColumnType("int");

                    b.Property<string>("ShortTermAmbition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StarSign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wounds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Advances")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Initial")
                        .HasColumnType("int");

                    b.Property<string>("LongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.ExperienceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<bool>("InCareerDiscount")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("XpBought")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("XpSpent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("ExperienceLogs");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LongTermPartyAmbition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyAwardedXP")
                        .HasColumnType("int");

                    b.Property<string>("ShortTermPartyAmbition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Skills.AdvancedSkill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Advances")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillCharacteristicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SkillCharacteristicId");

                    b.ToTable("AdvancedSkills");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Skills.BasicSkill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Advances")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillCharacteristicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SkillCharacteristicId");

                    b.ToTable("BasicSkills");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Talents", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimesTaken")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Talents");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Character", b =>
                {
                    b.HasOne("WarhammerXpCalculator.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Characteristic", b =>
                {
                    b.HasOne("WarhammerXpCalculator.Models.Character", null)
                        .WithMany("Characteristics")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.ExperienceLog", b =>
                {
                    b.HasOne("WarhammerXpCalculator.Models.Character", "character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("character");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Skills.AdvancedSkill", b =>
                {
                    b.HasOne("WarhammerXpCalculator.Models.Character", null)
                        .WithMany("AdvancedSkills")
                        .HasForeignKey("CharacterId");

                    b.HasOne("WarhammerXpCalculator.Models.Characteristic", "SkillCharacteristic")
                        .WithMany()
                        .HasForeignKey("SkillCharacteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkillCharacteristic");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Skills.BasicSkill", b =>
                {
                    b.HasOne("WarhammerXpCalculator.Models.Character", null)
                        .WithMany("BasicSkills")
                        .HasForeignKey("CharacterId");

                    b.HasOne("WarhammerXpCalculator.Models.Characteristic", "SkillCharacteristic")
                        .WithMany()
                        .HasForeignKey("SkillCharacteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SkillCharacteristic");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Talents", b =>
                {
                    b.HasOne("WarhammerXpCalculator.Models.Character", null)
                        .WithMany("Talents")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("WarhammerXpCalculator.Models.Character", b =>
                {
                    b.Navigation("AdvancedSkills");

                    b.Navigation("BasicSkills");

                    b.Navigation("Characteristics");

                    b.Navigation("Talents");
                });
#pragma warning restore 612, 618
        }
    }
}
